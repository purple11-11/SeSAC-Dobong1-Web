/* 
    transition vs animation
    - transition
        - 전환될 스타일을 지정하 수 있음
        - hover나 onClick 같은 "이벤트"에 의해 발생
    - animation
        - 중간 스텝을 지정해 보다 세밀한 스타일 전환 가능
        - 시작, 반복, 정지 동작 가능
        - @keyframes 로 이루어짐
*/

.box {
  width: 100px;
  height: 100px;
  position: relative;
  background-color: cyan;
  animation: my-ani;
  animation-duration: 5s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

/*
    animation
    - animation-name: @keyframes로 만들어준 애니메이션 이름 지정 (필수)
    - animation-duration: 한 사이클의 애니메이션이 얼마에 걸쳐 일어날지 지정(단위: s)
    - animation-delay: 요소가 로드된 후 언제 애니메이션이 시작될지 지정(단위: s)
    - animation-iteration-count: 애니메이션 반복횟수 (default: 1번) 무한반복은 infitie;
    - animation-timing-function: 어떤 시간 간격으로 애니메이션을 진행할 지 설정
        - ease(default) linear ease-in ease-in-out ease-out
    - animation-diraction: 애니메이션이 반복될 때 진행방향 지정
        - nomal(default) reverse alternate(1사이클 왔다갔다 하는 속성) alternate-reveres
*/

@keyframes my-ani {
  0% {
    left: 0px;
  }

  25% {
    left: 200px;
  }

  50% {
    left: 400px;
  }

  75% {
    left: 200px;
  }

  100% {
    left: 0px;
  }
}

.ball1 {
  position: relative;
  left: 100px;
  top: 0;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background-color: black;
  /* animation-name: bounce1;
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-out;
  animation-direction: alternate; */
  animation: bounce1 1s ease-out 0s infinite alternate;
}

@keyframes bounce1 {
  from {
    top: 300px;
  }

  to {
    top: 0px;
  }
}

.ball2 {
  width: 50px;
  height: 50px;
  background-color: tomato;
  position: absolute;
  border-radius: 50%;

  /* animation-name: bounce2;
  animation-duration: 2s;
  animation-iteration-count: infinite; */
  animation: bounce2 2s infinite;
}

@keyframes bounce2 {
  0%,
  100% {
    bottom: 0;
    width: 55px;
    animation-timing-function: ease-out;
  }

  50% {
    bottom: 300px;
    background-color: black;
    animation-timing-function: ease-in;
  }
}

.ball {
  position: relative;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background: linear-gradient(45deg, yellow, rgb(250, 37, 0));
  animation: roundWall 7s linear infinite;
}

@keyframes roundWall {
  0%,
  100% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(calc(100vw - 110px), 0);
  }
  50% {
    transform: translate(calc(100vw - 110px), calc(100vh - 175px));
  }
  75% {
    transform: translate(0, calc(100vh - 175px));
  }
}

.text {
  animation: sliding 2s linear;
}

@keyframes sliding {
  0% {
    /* margin-left: 100%; */
    transform: translate(100vh, 0);
    width: 150%;
  }

  50% {
    /* margin-left: 50%; */
    transform: translate(50vh, 0);
    width: 150%;
  }

  100% {
    /* margin-left: 0%; */
    transform: translate(0, 0);
    width: 100%;
  }
}

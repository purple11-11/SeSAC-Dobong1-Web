<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- jQuery CDN > ajax 사용 -->
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"
    ></script>
    <!-- axios CDN -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <title>동적폼 전송</title>
    <style>
      body {
        background-color: pink;
      }

      .result {
        font-size: 1.5rem;
        font-weight: 700;
      }
    </style>
  </head>
  <body>
    <h1>동적폼 연습하기</h1>

    <!-- 이름, 성별 입력받는 폼 -->
    <form name="register">
      <input type="text" name="name" required placeholder="이름을 입력해주세요." />
      <br />
      성별을
      <input type="radio" id="male" name="gender" value="남자" required />
      <label for="male">남성</label>
      <input type="radio" id="female" name="gender" value="여자" required />
      <label for="female">여성</label>
      <br />
      <br />
      <button type="button" onclick="ajaxGet()">Ajax GET 제출</button>
      <button type="button" onclick="ajaxPost()">Ajax POST 제출</button>
      <br />
      <button type="button" onclick="axiosGet()">axios GET 제출</button>
      <button type="button" onclick="axiosPost()">axios POST 제출</button>
      <br />
      <button type="button" onclick="fetchGet()">fetch GET 제출</button>
      <button type="button" onclick="fetchPost()">fetch POST 제출</button>
      <br />

      <!-- 동적폼 전송 결과 보여줄 곳 -->
      <div class="result"></div>

      <!-- open API 사용 -->
      <a href="/open-api">open API 사용해보기</a>
    </form>
    <script>
      const resultBox = document.querySelector(".result");

      // ajax
      function ajaxGet() {
        const form = document.forms["register"];

        // console.log(form);
        // console.log(form.name);
        // console.log(form.gender); //>> 배열 형태
        // console.log(form.male);

        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        $.ajax({
          type: "get",
          url: "/ajax",
          data: data,
          success: function (res) {
            // 요청 성공시 동작할 함수
            // res : 서버에서 보내준 데이터
            console.log(res);
            resultBox.textContent = `GET ajax 요청 완료! ${res.name}님의 성별은 ${res.gender}`;
            resultBox.style.color = "red";
          },
          error: function (err) {
            console.log("ajax 실패!");
          },
        });
      }

      function ajaxPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        $.ajax({
          type: "post",
          url: "/ajax",
          data: data,
          success: function (res) {
            console.log(res);
            resultBox.textContent = `POST ajax 요청 완료! ${res.name}님의 성별은 ${res.gender}`;
            resultBox.style.color = "orange";
          },
        });
      }

      // axios
      async function axiosGet() {
        const form = document.forms["register"];

        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // type button의 유효성 검사 : checkValidity()
        /*
            <form> 내부에 required 표시된 태그가 있다면 기입이 됐는지 안됐는지 검사
                - required가 있는 항목에 대해서
                    - 기입했다면 true, 기입하지 않았다면 false 반환
                - required가 없는 항목에 대해서는 무조건 true 반환
         */
        console.log(form.name.checkValidity());
        console.log(form.gender[0].checkValidity());
        console.log(form.gender[1].checkValidity());

        if (!form.name.checkValidity()) {
          resultBox.textContent = "이름을 입력해 주세요"; // custom message
          //   resultBox.textContent = form.name.validationMessage; // "이 입력란을 작성하세요."
        } else if (!form.gender[0].checkValidity() && !form.gender[1].checkValidity()) {
          resultBox.textContent = form.gender[0].validationMessage; // "다음 옵션 중 하나를 선택하세요."
          resultBox.textContent = "성별을 선택해주세요";
        } else {
          //   // 모든 값 채웠을 때 axios 요청!
          //   axios({
          //     method: "GET",
          //     url: "/axios",
          //     params: data, // get 일 떄는 params로 데이터 전달
          //   }).then((res) => {
          //     // ajax의 success
          //     console.log(res);
          //     console.log(res.data); // res.send가 준 값
          //     console.log(res.status); // 상태코드 출력
          //     console.log(res.statusText);
          //     console.log(res.headers);
          //     // 구조분해할당으로 reusltBox에 넣어줄 text 간단하게 나타냄
          //     const { name, gender } = res.data;
          //     // const {name, gender} = {name: "이름", gender: "성별"}; 과 같음
          //     resultBox.textContent = `GET axios 요청 완료! ${name}님의 성별은 ${gender}`;
          //     // 구조분해할당 미 사용시
          //     // resultBox.textContent = `GET axios 요청 완료! ${res.data.name}님의 성별은 ${res.data.gender
          //   });

          //   try{} catch(err){} 사용
          try {
            const response = await axios({
              // data를 불러오는 작업은 시간이 걸리기 때문에 await 붙여줘야 함
              method: "GET",
              url: `/axios?name=${data.name}&gender=${data.gender}`,
              // params: data,
            });
            console.log(response.data);
            const { name, gender } = response.data;
            resultBox.textContent = `GET axios 요청 완료! ${name}님의 성별은 ${gender}`;
            resultBox.style.color = "green";
          } catch (err) {
            console.log("err!!", err);
          }
        }
      }

      async function axiosPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        try {
          const response = await axios({
            method: "post",
            url: "axios",
            data: data,
          });
          console.log(response.data);
          // 구조분해할당
          const { name: 이름, gender: 성별 } = response.data;
          // 한글 변수도 사용 가능하지만 일반적으로 영어 변수명 사용 권장
          resultBox.textContent = `POST axios 요청 완료! ${이름}님의 성별은 ${성별}`;
          resultBox.style.color = "blue";
        } catch (err) {
          console.log(err);
        }
      }

      // fetch
      function fetchGet() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // fetch('url', {요청과 관련된 데이터}) - 매개변수 2개 필요
        // fetch는 get일 때, 무조건!! url에 data 내용을 포함시켜서 요청 보내야 함

        // fetch(`/fetch?name=${data.name}&gender=${data.gender}`, {
        //   method: "get",
        // }).then(function (res) {
        //   console.log(res);
        // });

        // OR

        // method: 'get' 생략 가능
        // fetch 사용 시 then 2번 사용
        fetch(`/fetch?name=${data.name}&gender=${data.gender}`)
          .then(function (res) {
            // res : HTTP 응답 전체를 나타내는 객체
            console.log(res);
            // 본문 콘텐트를 추출하기 위해서 사용하는 메서드 : json(), text()
            // 반드시 return을 해줘야 객체에 담긴 정보가 넘어간다!
            // return res.text(); // res 값 변환 작업이 필요함
            return res.json(); // json 객체로 받아오는 데이터가 아니라서 SyntaxError 오류 발생
          })
          .then(function (result) {
            console.log("++++++++++");
            console.log(result);
            resultBox.style.color = "coral";
            resultBox.textContent = `GET fetch 요청 완료! ${result.name}님의 성별은 ${result.gender}`;
          });
      }

      // await, then 2번 사용
      async function fetchPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        try {
          const res = await fetch("/fetch", {
            method: "post",
            headers: {
              "Content-Type": "application/json",
            },
            // POST 요청일 때,
            // data(객체)를 JSON 형태로 body에 담아 전송
            body: JSON.stringify(data),
          });
          console.log(res);

          const result = await res.json();
          console.log(result);

          resultBox.style.color = "lime";
          resultBox.textContent = `POST fetch 요청 완료! ${result.name}님의 성별은 ${result.gender}`;
        } catch (err) {
          console.log("ERR!!", err);
        }
      }
    </script>
  </body>
</html>
